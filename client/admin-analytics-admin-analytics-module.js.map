{"version":3,"sources":["webpack:///./src/app/admin/pages/admin-analytics/admin-analytics.component.css","webpack:///./src/app/admin/pages/admin-analytics/admin-analytics.component.html","webpack:///./src/app/admin/pages/admin-analytics/admin-analytics.component.ts","webpack:///./src/app/admin/pages/admin-analytics/admin-analytics.module.ts","webpack:///./src/app/admin/pages/admin-analytics/admin-analytics.routing.ts","webpack:///./src/app/admin/pages/admin-analytics/pieCharts.service.ts"],"names":[],"mappings":"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","file":"admin-analytics-admin-analytics-module.js","sourcesContent":["module.exports = \".question_block .card-header {\\r\\n    display: none;\\r\\n}\\r\\n.question_block h3 {\\r\\n    color: rgba(38, 37, 60, 0.7);\\r\\n}\\r\\n.area {\\r\\n    width: 100%;\\r\\n    margin-bottom: 10px;\\r\\n}\\r\\n.area_text {\\r\\n    display: inline-block;\\r\\n    width: auto;\\r\\n    margin-right: 3%;\\r\\n    font-size: 18px;\\r\\n    width: 12%;\\r\\n}\\r\\n.pbar_wrapper {\\r\\n    width: 85%;\\r\\n    display: inline-block;\\r\\n    background-color: #e2e2e2;\\r\\n}\\r\\n.area .pbar {\\r\\n    background-color: aqua;\\r\\n    text-align: center;\\r\\n}\\r\\n.area .pbar span {\\r\\n    font-size: 9px;\\r\\n    color: brown;\\r\\n}\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvYWRtaW4vcGFnZXMvYWRtaW4tYW5hbHl0aWNzL2FkbWluLWFuYWx5dGljcy5jb21wb25lbnQuY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0lBQ0ksY0FBYztDQUNqQjtBQUNEO0lBQ0ksNkJBQTZCO0NBQ2hDO0FBQ0Q7SUFDSSxZQUFZO0lBQ1osb0JBQW9CO0NBQ3ZCO0FBQ0Q7SUFDSSxzQkFBc0I7SUFDdEIsWUFBWTtJQUNaLGlCQUFpQjtJQUNqQixnQkFBZ0I7SUFDaEIsV0FBVztDQUNkO0FBQ0Q7SUFDSSxXQUFXO0lBQ1gsc0JBQXNCO0lBQ3RCLDBCQUEwQjtDQUM3QjtBQUNEO0lBQ0ksdUJBQXVCO0lBQ3ZCLG1CQUFtQjtDQUN0QjtBQUNEO0lBQ0ksZUFBZTtJQUNmLGFBQWE7Q0FDaEIiLCJmaWxlIjoic3JjL2FwcC9hZG1pbi9wYWdlcy9hZG1pbi1hbmFseXRpY3MvYWRtaW4tYW5hbHl0aWNzLmNvbXBvbmVudC5jc3MiLCJzb3VyY2VzQ29udGVudCI6WyIucXVlc3Rpb25fYmxvY2sgLmNhcmQtaGVhZGVyIHtcclxuICAgIGRpc3BsYXk6IG5vbmU7XHJcbn1cclxuLnF1ZXN0aW9uX2Jsb2NrIGgzIHtcclxuICAgIGNvbG9yOiByZ2JhKDM4LCAzNywgNjAsIDAuNyk7XHJcbn1cclxuLmFyZWEge1xyXG4gICAgd2lkdGg6IDEwMCU7XHJcbiAgICBtYXJnaW4tYm90dG9tOiAxMHB4O1xyXG59XHJcbi5hcmVhX3RleHQge1xyXG4gICAgZGlzcGxheTogaW5saW5lLWJsb2NrO1xyXG4gICAgd2lkdGg6IGF1dG87XHJcbiAgICBtYXJnaW4tcmlnaHQ6IDMlO1xyXG4gICAgZm9udC1zaXplOiAxOHB4O1xyXG4gICAgd2lkdGg6IDEyJTtcclxufVxyXG4ucGJhcl93cmFwcGVyIHtcclxuICAgIHdpZHRoOiA4NSU7XHJcbiAgICBkaXNwbGF5OiBpbmxpbmUtYmxvY2s7XHJcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjZTJlMmUyO1xyXG59XHJcbi5hcmVhIC5wYmFyIHtcclxuICAgIGJhY2tncm91bmQtY29sb3I6IGFxdWE7XHJcbiAgICB0ZXh0LWFsaWduOiBjZW50ZXI7XHJcbn1cclxuLmFyZWEgLnBiYXIgc3BhbiB7XHJcbiAgICBmb250LXNpemU6IDlweDtcclxuICAgIGNvbG9yOiBicm93bjtcclxufSJdfQ== */\"","module.exports = \"<div class=\\\"container-fluid\\\">\\n  <div class=\\\"question_block\\\">\\n    <h3>Plan selected the most</h3>\\n    <card cardTitle='Pie Chart'>\\n      <div *ngIf=\\\"planSelectedOptions\\\" echarts [options]=\\\"planSelectedOptions\\\" [loading]=\\\"showloading\\\" theme=\\\"light\\\" class=\\\"demo-chart\\\"></div>\\n    </card>\\n  </div>\\n  <div class=\\\"question_block\\\">\\n    <h3>Areas with the most Delivery</h3>\\n    <card cardTitle='Most delivery'>\\n      <div *ngFor=\\\"let area of areaInfo\\\" class=\\\"area\\\">\\n        <div class=\\\"area_text\\\">{{area.areaName}}</div>\\n        <div class=\\\"pbar_wrapper\\\">\\n           <div title=\\\"{{area.percent}}%\\\" [ngStyle]=\\\"{'width.%': area.percent}\\\" class=\\\"pbar\\\"><span> {{area.count + ' (' + area.percent}} %)</span></div>\\n        </div>\\n      </div>\\n    </card>\\n  </div>\\n  <div class=\\\"question_block\\\">\\n    <h3>Allergens and People</h3>\\n    <card cardTitle='Pie Chart'>\\n      <div *ngIf=\\\"allergyOptions\\\" echarts [options]=\\\"allergyOptions\\\" [loading]=\\\"showloading\\\" theme=\\\"light\\\" class=\\\"demo-chart\\\"></div>\\n    </card>\\n  </div>\\n  <div class=\\\"question_block\\\">\\n    <h3>Fruits disliked the most?</h3>\\n    <card cardTitle='Pie Chart'>\\n      <div *ngIf=\\\"fruitOptions\\\" echarts [options]=\\\"fruitOptions\\\" [loading]=\\\"showloading\\\" theme=\\\"light\\\" class=\\\"demo-chart\\\"></div>\\n    </card>\\n  </div>\\n  <!-- <div class=\\\"question_block\\\">\\n    <h3>Month Wise website traffic</h3>\\n    <card cardTitle='Line Chart'>\\n      <div echarts [options]=\\\"monthWiseTrafficOption\\\" [loading]=\\\"showloading\\\" theme=\\\"light\\\" class=\\\"demo-chart\\\"></div>\\n    </card>\\n  </div> -->\\n</div>\\n\"","import { Component, OnInit, OnChanges } from '@angular/core';\nimport { ChartsService } from './pieCharts.service';\nimport { HttpClient } from '@angular/common/http';\nimport { AuthService } from '../../../user/auth.service';\n\n@Component({\n  selector: 'app-admin-analytics',\n  templateUrl: './admin-analytics.component.html',\n  styleUrls: ['./admin-analytics.component.css'],\n  providers: [ChartsService]\n})\nexport class AdminAnalyticsComponent implements OnInit, OnChanges {\n  planSelectedOptions;\n  allergyOptions;\n  fruitOptions;\n  width: number;\n  totalAreaCount=0;\n  areaInfo = [];\n  monthWiseTrafficOption;\n  Math: any;\n  constructor(private chartsService: ChartsService, private http: HttpClient, private auth: AuthService) {\n    this.Math = Math;\n  }\n  ngOnInit() {\n    this.chartsService.getAllPlans((options) => {\n      this.planSelectedOptions = options;\n      console.log(this.planSelectedOptions)\n    });\n    this.chartsService.getAllergic((options) => {\n      this.allergyOptions = options;\n    });\n     this.chartsService.getFruitsLikedMost((options) => {\n      this.fruitOptions = options;\n    });\n    console.log(\"plan\", this.planSelectedOptions);\n    this.http.get(this.auth.getDomainName() + '/api/analysis/most/delivered/area')\n    .subscribe((res: any) => {\n        console.log(res.data);\n        this.totalAreaCount = res.data.reduce((a,b) => ({count: a.count + b.count})).count;\n        console.log('Area Count  : ', this.totalAreaCount);\n        res.data.forEach((area,index) => {\n            // this.planSelectedOptions.legend.data.push(plan.planInfo.title);\n            // this.planSelectedOptions.series[0].data.push({ value: plan.count, name: plan.planInfo.title });\n            area.percent = (( area.count * 100) / this.totalAreaCount).toFixed(2);\n            console.log('Percent  : ',  res.data[index].percent);\n            this.areaInfo.push({areaName: area._id, count: area.count, percent: area.percent});\n        });\n    },\n    err => {\n\n  });\n  this.width = 40;\n}\nngOnChanges() {  \n}\n  \n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { AdminAnalyticsComponent } from './admin-analytics.component';\nimport { routing } from './admin-analytics.routing';\nimport { SharedModule } from '../../shared/shared.module';\nimport { NgxEchartsModule } from 'ngx-echarts';\n\n/* components */\nimport { EChartsComponent } from '../charts/components/echarts/echarts.component';\n\n@NgModule({\n    imports: [\n        CommonModule,\n        SharedModule,\n        NgxEchartsModule,\n        routing\n    ],\n    declarations: [\n        AdminAnalyticsComponent,\n        EChartsComponent\n    ]\n})\nexport class AdminAnalyticsModule { }\n","import { Routes, RouterModule } from '@angular/router';\nimport { AdminAnalyticsComponent } from './admin-analytics.component';\n\nconst childRoutes: Routes = [\n    {\n        path: '',\n        component: AdminAnalyticsComponent\n    }\n];\n\nexport const routing = RouterModule.forChild(childRoutes);\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { AuthService } from '../../../user/auth.service';\r\n\r\n@Injectable()\r\nexport class ChartsService {\r\n    constructor(private http: HttpClient, private auth: AuthService) { }\r\nplanSelectedOptions = {\r\n    tooltip: {\r\n        trigger: 'item',\r\n        formatter: '{a} <br/>{b}: {c} ({d}%)'\r\n    },\r\n    legend: {\r\n        orient: 'vertical',\r\n        x: 'left',\r\n        // data: ['1 week', '4 week', '12 week']\r\n        data:[]\r\n    },\r\n    roseType: 'angle',\r\n    series: [\r\n        {\r\n            name: 'Plans',\r\n            type: 'pie',\r\n            radius: [0, '50%'],\r\n            data: [\r\n                // { value: 235, name: '1 week' },\r\n                // { value: 210, name: '4 week' },\r\n                // { value: 162, name: '12 week' }\r\n            ]\r\n        }\r\n    ]\r\n}\r\nallergyOptions = {\r\n    tooltip: {\r\n        trigger: 'item',\r\n        formatter: '{a} <br/>{b}: {c} ({d}%)'\r\n    },\r\n    legend: {\r\n        orient: 'vertical',\r\n        x: 'left',\r\n        // data: ['Milk', 'Eggs', 'Peanuts', 'Other Nuts', 'Wheat']\r\n        data: []\r\n    },\r\n    roseType: 'angle',\r\n    series: [\r\n        {\r\n            name: 'Allergy',\r\n            type: 'pie',\r\n            radius: [0, '50%'],\r\n            data: [\r\n                // { value: 235, name: 'Milk' },\r\n                // { value: 210, name: 'Eggs' },\r\n                // { value: 162, name: 'Peanuts' },\r\n                // { value: 100, name: 'Other Nuts' },\r\n                // { value: 50, name: 'Wheat' }\r\n            ]\r\n        }\r\n    ]\r\n}\r\nfruitOptions = {\r\n    tooltip: {\r\n        trigger: 'item',\r\n        formatter: '{a} <br/>{b}: {c} ({d}%)'\r\n    },\r\n    legend: {\r\n        orient: 'vertical',\r\n        x: 'left',\r\n        // data: ['Banana', 'Apple', 'Pear', 'Guava', 'Mango']\r\n        data: []\r\n    },\r\n    roseType: 'angle',\r\n    series: [\r\n        {\r\n            name: 'Fruits',\r\n            type: 'pie',\r\n            radius: [0, '50%'],\r\n            data: [\r\n                // { value: 143, name: 'Banana' },\r\n                // { value: 178, name: 'Apple' },\r\n                // { value: 240, name: 'Pear' },\r\n                // { value: 100, name: 'Guava' },\r\n                // { value: 300, name: 'Mango' }\r\n            ]\r\n        }\r\n    ]\r\n}\r\n    monthWiseTrafficOption = {\r\n        tooltip: {\r\n            trigger: 'axis',\r\n            axisPointer: {            \r\n                type: 'shadow'      \r\n            }\r\n        },\r\n        grid: {\r\n            left: '3%',\r\n            right: '4%',\r\n            bottom: '3%',\r\n            containLabel: true\r\n        },\r\n        xAxis: [\r\n            {\r\n                type: 'category',\r\n                data: ['Jan', 'Feb', 'Mar', 'Apr'],\r\n                axisTick: {\r\n                    alignWithLabel: true\r\n                }\r\n            }\r\n        ],\r\n        yAxis: [\r\n            {\r\n                // type: 'value',\r\n                type: 'value',\r\n                data: [0, 1000, 2000],\r\n                axisTick: {\r\n                    alignWithLabel: true\r\n                }\r\n            }\r\n        ],\r\n        series: [\r\n            {\r\n                name: 'abc',\r\n                type: 'bar',\r\n                barWidth: '20%',\r\n                data: [10, 1000, 200, 334]\r\n            }\r\n        ]\r\n    };\r\n    getAllPlans(cb) {\r\n        this.http.get(this.auth.getDomainName() + '/api/analysis/most/used/plan')\r\n        .subscribe((res: any) => {\r\n            console.log(res.data);\r\n            if(res.success){\r\n                res.data.forEach(plan => {\r\n                    this.planSelectedOptions.legend.data.push(plan.planInfo.title.toUpperCase());\r\n                    this.planSelectedOptions.series[0].data.push({ value: plan.count, name: plan.planInfo.title.toUpperCase() });\r\n                });\r\n                console.log(this.planSelectedOptions)\r\n                cb(this.planSelectedOptions);\r\n            }else{\r\n                cb(this.planSelectedOptions);\r\n            }\r\n            \r\n        },\r\n        err => {\r\n\r\n    });\r\n    }\r\n    getAllergic(cb) {\r\n        this.http.get(this.auth.getDomainName() + '/api/analysis/most/allergic')\r\n        .subscribe((res: any) => {\r\n            console.log(res.data);\r\n            if(res.success) {\r\n                res.data.forEach(allergicItem => {\r\n                    if(allergicItem && allergicItem._id) {\r\n                        this.allergyOptions.legend.data.push(allergicItem && allergicItem._id ? allergicItem._id.toUpperCase() :'');\r\n                        this.allergyOptions.series[0].data.push({value: allergicItem.count, name: allergicItem && allergicItem._id ? allergicItem._id.toUpperCase() :'' });\r\n                    }\r\n                });\r\n                console.log(this.allergyOptions)\r\n                cb(this.allergyOptions);\r\n            }\r\n            else {\r\n                cb(this.allergyOptions);\r\n            }\r\n        },\r\n        err => {\r\n\r\n        });        \r\n    }\r\n    getFruitsLikedMost(cb) {\r\n        this.http.get(this.auth.getDomainName() + '/api/analysis/most/liked/fruits')\r\n        .subscribe((res: any) => {\r\n            console.log(res.data);\r\n            if(res.success) {\r\n                res.data.forEach(fruitsItem => {\r\n                    if(fruitsItem && fruitsItem._id) {\r\n                        this.fruitOptions.legend.data.push( fruitsItem && fruitsItem._id ? fruitsItem._id.toUpperCase() :\"\");\r\n                        this.fruitOptions.series[0].data.push({value: fruitsItem.count, name:fruitsItem && fruitsItem._id ? fruitsItem._id.toUpperCase() :\"\"});\r\n                    }\r\n                });\r\n                console.log(this.fruitOptions);\r\n                cb(this.fruitOptions);\r\n            }   \r\n            else {\r\n                cb(this.fruitOptions);\r\n            }\r\n        },\r\n        err => {\r\n\r\n        });        \r\n    }\r\n}"],"sourceRoot":""}
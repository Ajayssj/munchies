{"version":3,"sources":["webpack:///./node_modules/coupon-code/coupon-code.js","webpack:///./node_modules/xtend/immutable.js","webpack:///./src/app/admin/pages/snacks/snacks.component.css","webpack:///./src/app/admin/pages/snacks/snacks.component.html","webpack:///./src/app/admin/pages/snacks/snacks.component.ts","webpack:///./src/app/admin/pages/snacks/snacks.module.ts","webpack:///./src/app/admin/pages/snacks/snacks.routing.ts"],"names":[],"mappings":";;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,YAAY,mBAAO,CAAC,gDAAO;;AAE3B;AACA;AACA;AACA;AACA,oDAAoD,4EAA4E;AAChI;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;;AAED;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA,mBAAmB;;AAEnB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,gBAAgB;AACvC;AACA,4BAA4B,sBAAsB;AAClD;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA,mBAAmB;;AAEnB;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA,oBAAoB,kBAAkB;AACtC;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;;AAEA;AACA;AACA;AACA,eAAe,yBAAyB;AACxC;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;;;;;;;;;;;AC3JA;;AAEA;;AAEA;AACA;;AAEA,mBAAmB,sBAAsB;AACzC;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;;;;;;;;;;;AClBA,+DAA+D,2J;;;;;;;;;;;ACA/D,gWAAgW,SAAS,gxBAAgxB,cAAc,yBAAyB,aAAa,yBAAyB,eAAe,yBAAyB,iBAAiB,yBAAyB,kBAAkB,yBAAyB,oBAAoB,yBAAyB,aAAa,sDAAsD,wIAAwI,iBAAiB,SAAS,kzEAAkzE,4nFAA4nF,krCAAkrC,oHAAoH,4E;;;;;;;;;;;;;;;;;;;;;;;;;;;ACAzuP;AACP;AACM;AACP;AAUxD;IAqBE,yBAAoB,I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","file":"snacks-snacks-module.js","sourcesContent":["// --------------------------------------------------------------------------------------------------------------------\n//\n// coupon-code.js : An implementation of Perl's Algorithm::CouponCode for NodeJS.\n//\n// Author           : Andrew Chilton\n// Web              : http://www.chilts.org/blog/\n// Email            : <andychilton@gmail.com>\n//\n// Copyright (c)    : AppsAttic Ltd 2011\n// Web              : http://www.appsattic.com/\n// License          : http://opensource.org/licenses/MIT\n//\n// Copyright (c)    : Andrew Chilton 2013\n// Web              : http://chilts.org/\n// License          : http://opensource.org/licenses/MIT\n//\n// --------------------------------------------------------------------------------------------------------------------\n\n// npm\nvar xtend = require('xtend');\n\n// --------------------------------------------------------------------------------------------------------------------\n// constants\nvar badWordsList = ('SHPX PHAG JNAX JNAT CVFF PBPX FUVG GJNG GVGF SNEG URYY ZHSS QVPX XABO ' +\n                   'NEFR FUNT GBFF FYHG GHEQ FYNT PENC CBBC OHGG SRPX OBBO WVFZ WVMM CUNG')\n                   .replace(/[a-zA-Z]/g,function(c){return String.fromCharCode((c<=\"Z\"?90:122)>=(c=c.charCodeAt(0)+13)?c:c-26);})\n                   .split(' ');\nvar symbolsStr = '0123456789ABCDEFGHJKLMNPQRTUVWXY';\nvar symbolsArr = symbolsStr.split('');\nvar symbolsObj = {};\nsymbolsArr.forEach(function(c, i) {\n    symbolsObj[c] = i;\n});\n\nvar defaults = {\n    parts   : 3,\n    partLen : 4,\n};\n\n// --------------------------------------------------------------------------------------------------------------------\n// exports\n\nmodule.exports.generate = function(opts) {\n    opts = xtend({}, defaults, opts);\n\n    var parts = [];\n    var part;\n    var i;\n    var j;\n\n    // if we have a plaintext, generate a code from that\n    if ( opts.plaintext ) {\n        // not yet implemented\n        return '';\n    }\n    else {\n        // default to a random code\n        do {\n            parts.length = 0;\n            for( i = 0; i < opts.parts; i++ ) {\n                part = '';\n                for ( j = 0; j < opts.partLen - 1; j++ ) {\n                    part += randomSymbol();\n                }\n                part = part + checkDigitAlg1(part, i+1);\n                parts.push(part);\n            }\n        } while (hasBadWord(parts.join('')))\n    }\n\n    return parts.join('-');\n};\n\nmodule.exports.validate = function(code, opts) {\n    if ( !code ) {\n        throw new Error(\"Provide a code to be validated\");\n    }\n    opts = xtend({}, defaults, opts);\n\n    // uppercase the code, take out any random chars and replace OIZS with 0125\n    code = code.toUpperCase()\n        .replace(/[^0-9A-Z]+/g, '')\n        .replace(/O/g, '0')\n        .replace(/I/g, '1')\n        .replace(/Z/g, '2')\n        .replace(/S/g, '5');\n\n    // split in the different parts\n    var parts = [];\n    var tmp = code;\n    while( tmp.length > 0 ) {\n        parts.push( tmp.substr(0, opts.partLen) );\n        tmp = tmp.substr(opts.partLen);\n    }\n\n    // make sure we have been given the same number of parts as we are expecting\n    if ( parts.length !== opts.parts ) {\n        return '';\n    }\n\n    // validate each part\n    var part, str, check, data;\n    for ( var i = 0; i < parts.length; i++ ) {\n        part = parts[i];\n        // check this part has 4 chars\n        if ( part.length !== opts.partLen ) {\n            return '';\n        }\n\n        // split out the data and the check\n        data = part.substr(0, opts.partLen-1);\n        check = part.substr(opts.partLen-1, 1);\n\n        if ( check !== checkDigitAlg1(data, i+1) ) {\n            return '';\n        }\n    }\n\n    // everything looked ok with this code\n    return parts.join('-');\n};\n\n// --------------------------------------------------------------------------------------------------------------------\n// internal helpers\n\nfunction randomSymbol() {\n    return symbolsArr[parseInt(Math.random() * symbolsArr.length, 10)];\n}\n\n// returns the checksum character for this (data/part) combination\nfunction checkDigitAlg1(data, check) {\n    // check's initial value is the part number (e.g. 3 or above)\n\n    // loop through the data chars\n    data.split('').forEach(function(v) {\n        var k = symbolsObj[v];\n        check = check * 19 + k;\n    });\n\n    return symbolsArr[ check % 31 ];\n}\n\nfunction hasBadWord(code) {\n    var i;\n    code = code.toUpperCase();\n    for( i = 0; i < badWordsList.length; i++ ) {\n        if (code.indexOf(badWordsList[i]) > -1)\n            return true;\n    }\n    return false;\n};\n\n// also export this (for testing)\nmodule.exports.hasBadWord = hasBadWord\n\n// --------------------------------------------------------------------------------------------------------------------\n","module.exports = extend\n\nvar hasOwnProperty = Object.prototype.hasOwnProperty;\n\nfunction extend() {\n    var target = {}\n\n    for (var i = 0; i < arguments.length; i++) {\n        var source = arguments[i]\n\n        for (var key in source) {\n            if (hasOwnProperty.call(source, key)) {\n                target[key] = source[key]\n            }\n        }\n    }\n\n    return target\n}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2FkbWluL3BhZ2VzL3NuYWNrcy9zbmFja3MuY29tcG9uZW50LmNzcyJ9 */\"","module.exports = \"<div class=\\\"coupan_wrapper\\\">\\n    <div class=\\\"container-fluid content\\\">\\n      <h2>Coupan</h2>\\n  \\n      <div>\\n        <div class=\\\"row\\\">\\n          <button (click)=\\\"addModal.open()\\\" class=\\\"btn btn-primary add_coupan_btn\\\" style=\\\"margin:20px\\\">Add Coupan</button>\\n          <span class=\\\"success\\\" *ngIf=\\\"message!=''\\\">{{message}}</span>\\n\\n  <!-- <a routerLink=\\\"/admin/pages/customer/cust/3423/plan/123\\\">cust Plan</a>\\n  <a routerLink=\\\"/admin/pages/customer/cust/3423/plan/123/week/1\\\">Week Plan</a> -->\\n  \\n      <!-- <Button class=\\\"btn btn-primary\\\" (click)=\\\"navigateBack()\\\">Back</Button> -->\\n      <table class=\\\"table table-bordered table-hover\\\">\\n        <thead>\\n          <tr>\\n           \\n            <th>title</th>\\n            <th>code</th>\\n            <th>expiry</th>\\n            <th>discount</th>\\n            <th>frequency</th>\\n            <th>description</th>\\n            <th>type</th>\\n            <th>Edit/Delete</th>\\n            <!-- <th>Plan Detail</th> -->\\n          </tr>\\n        </thead>\\n      <tbody>\\n           <tr *ngFor=\\\"let coupan of coupansres\\\">\\n            <td>{{coupan.title}}</td>\\n            <td>{{coupan.code}}</td>\\n            <td>{{coupan.expiry}}</td>\\n            <td>{{coupan.discount}}</td>\\n            <td>{{coupan.frequency}}</td>\\n            <td>{{coupan.description}}</td>\\n            <td>{{coupan.type}}</td>\\n            <button (click)=\\\"editModal.open();selectedCoupanObj=coupan\\\" class=\\\"btn btn-success mr-20\\\">Edit</button>\\n            <button (click)=\\\"confirmDeleteCoupanModal.open();CoupanObj=coupan; index=i;\\\" class=\\\"btn btn-danger\\\">Delete</button>\\n           \\n          </tr>\\n        </tbody> \\n      </table>\\n\\n  </div>\\n  </div>\\n  </div>\\n  </div>\\n      \\n      <modal #addModal>\\n          <modal-header>\\n            <h3>Add Coupan</h3>\\n          </modal-header>\\n          <modal-content>\\n            <div (click)=\\\"hideAutoComplete = false\\\">\\n              <div class=\\\"form-group\\\">\\n                <label class=\\\"control-label\\\">Title</label>\\n                <input type=\\\"text\\\" [(ngModel)]=\\\"addctitle\\\" class=\\\"form-control\\\" placeholder=\\\"Enter coupan title\\\" />\\n               \\n              </div>\\n              <div class=\\\"form-group\\\">\\n                <label class=\\\"control-label\\\">Code</label>\\n                <input readonly type=\\\"text\\\" [(ngModel)]=\\\"coupanCode\\\" class=\\\"form-control\\\" placeholder=\\\"Enter coupan title\\\" />\\n\\n                <button (click)=\\\"createCoupan()\\\" class=\\\"btn btn-primary\\\">Generate Coupan Code</button>\\n              </div>\\n              <div class=\\\"form-group\\\">\\n                <label class=\\\"control-label\\\">Expiry</label>\\n                <input type=\\\"date\\\" [(ngModel)]=\\\"addcexpiry\\\" class=\\\"form-control\\\" placeholder=\\\"Enter coupan Expiry\\\" />\\n              </div>\\n              <div class=\\\"form-group\\\">\\n                <label class=\\\"control-label\\\">Discount</label>\\n                <input type=\\\"text\\\" [(ngModel)]=\\\"addcdiscount\\\" class=\\\"form-control\\\" placeholder=\\\"Enter coupan Discount\\\" />\\n              </div>\\n              <div class=\\\"form-group\\\">\\n                  <label class=\\\"control-label\\\">Frequency</label>\\n                  <input type=\\\"text\\\" [(ngModel)]=\\\"addcfrq\\\" class=\\\"form-control\\\" placeholder=\\\"Enter coupan frequency\\\" />\\n                </div>\\n                <div class=\\\"form-group\\\">\\n                    <label class=\\\"control-label\\\">Description</label>\\n                    <input type=\\\"text\\\" [(ngModel)]=\\\"addcdes\\\" class=\\\"form-control\\\" placeholder=\\\"Enter coupan Description\\\" />\\n                  </div>\\n                  <div class=\\\"form-group\\\">\\n                  <label class=\\\"control-label\\\">Discount Type</label>\\n                  <select [(ngModel)]=\\\"addctype\\\" placeholder=\\\"Select Type\\\" class=\\\"form-control\\\">\\n                    <option value=\\\"\\\" default=\\\"\\\" disabled=\\\"\\\" style=\\\"display: none;\\\">Select Discount type Percentage or Amount</option>\\n                    <option value=\\\"1\\\">Percent</option>\\n                    <option value=\\\"2\\\">amount</option>\\n                  </select>\\n                  </div>\\n              <!-- <div class=\\\"form-group\\\">\\n                <label class=\\\"control-label\\\">Discount Type</label>\\n                <input type=\\\"text\\\" [(ngModel)]=\\\"addctype\\\" class=\\\"form-control\\\" placeholder=\\\"Enter coupan Type\\\" />\\n              </div> -->\\n              <button (click)=\\\"addCoupan(addModal)\\\" class=\\\"btn btn-primary\\\">Add Coupan</button>\\n            </div>\\n          </modal-content>\\n        </modal>\\n          <modal #editModal>\\n            <modal-header>\\n              <h3>Edit Coupan</h3>\\n            </modal-header>\\n            <modal-content>\\n              <div (click)=\\\"hideAutoComplete = false\\\" *ngIf=\\\"selectedCoupanObj\\\">\\n                <div class=\\\"form-group\\\">\\n                  <label class=\\\"control-label\\\">Title</label>\\n                  <input type=\\\"text\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"selectedCoupanObj.title\\\" />\\n                </div>\\n               <div class=\\\"form-group\\\">\\n                  <label class=\\\"control-label\\\">Code</label>\\n                  <input readonly type=\\\"text\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"selectedCoupanObj.code\\\" />\\n                </div>\\n                <div class=\\\"form-group\\\">\\n                  <label class=\\\"control-label\\\">Expiry</label>\\n                  <input type=\\\"text\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"selectedCoupanObj.expiry\\\" />\\n                </div>\\n                <div class=\\\"form-group\\\">\\n                  <label class=\\\"control-label\\\">Discount</label>\\n                  <input type=\\\"text\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"selectedCoupanObj.discount\\\" />\\n                </div>\\n               \\n                <div class=\\\"form-group\\\">\\n                  <label class=\\\"control-label\\\">Frequency</label>\\n                  <input type=\\\"text\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"selectedCoupanObj.frequency\\\" />\\n                </div>\\n\\n                <div class=\\\"form-group\\\">\\n                    <label class=\\\"control-label\\\">Description</label>\\n                    <input type=\\\"text\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"selectedCoupanObj.description\\\" />\\n                  </div>\\n                  <div class=\\\"form-group\\\">\\n                      <label class=\\\"control-label\\\">Discount Type</label>\\n                  <select [(ngModel)]=\\\"selectedCoupanObj.type\\\"class=\\\"form-control\\\">\\n                      <option value=\\\"\\\" default=\\\"\\\" disabled=\\\"\\\" style=\\\"display: none;\\\">Select Discount type Percentage or Amount</option>\\n                      <option value=\\\"1\\\">Percent</option>\\n                      <option value=\\\"2\\\">amount</option>\\n                    </select>\\n                  </div>\\n                  <!-- <div class=\\\"form-group\\\">\\n                      <label class=\\\"control-label\\\">Discount Type</label>\\n                      <input type=\\\"text\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"selectedCoupanObj.type\\\" />\\n                    </div> -->\\n                <button class=\\\"btn btn-primary\\\" (click)=\\\"editCoupan(editModal, selectedCoupanObj,selectedCoupanObj._id)\\\">Edit Coupan</button>\\n              </div>\\n            </modal-content>\\n          </modal>\\n         \\n        \\n            <modal #confirmDeleteCoupanModal class=\\\"confirmDeleteModal\\\">\\n              <modal-header>\\n                <h3>Confirm Delete</h3>\\n              </modal-header>\\n              <modal-content>\\n                <h4>Are you sure you want to delete this product?</h4>\\n              </modal-content>\\n              <modal-footer>\\n                  <button class=\\\"btn btn-danger\\\" (click)=\\\"deleteItem(CoupanObj._id, confirmDeleteCoupanModal, index);\\\">Yes</button>\\n                  <button class=\\\"btn btn-success\\\" (click)=\\\"closeModal(confirmDeleteCoupanModal);\\\">No</button>\\n              </modal-footer>\\n            </modal>\\n      \"","import { Component, OnInit, HostListener } from '@angular/core';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { AuthService } from '../../../user/auth.service'\nimport * as cc from 'coupon-code';\nimport { AlertPopupComponent } from '../../../user/alert-popup/alert-popup.component';\n\n\n@Component({\n  selector: 'app-snacks',\n  templateUrl: './snacks.component.html',\n  styleUrls: ['./snacks.component.css']\n})\nexport class SnacksComponent implements OnInit {\n  coupans={};\n  coupansres=[];\n  coupanCode='';\n  addCoupanArray= {};\n  data={};\n  editCoupanArray = {};\n  addctitle : string;\n  addccode : any;\n  addcexpiry: string;\n  addcdiscount:string;\n  addcfrq:string;\n  addcdes:string;\n  addctype:number;\n  selectedCoupanObj:{ title:'',code:'',expiry:'',discount:'',frequency:'',description:'',type:''};\n  CoupanObj={};\n  ccode:string;\n  ctitle:string;\n  cid:string;\n\n\n  constructor(private http: HttpClient, private auth: AuthService, private router: Router,\n    private activatedRoute: ActivatedRoute) { }\n\n  ngOnInit() {\n    this.http.get(this.auth.getDomainName() + '/api/coupan').subscribe((res: any) => {\n   // this.http.get('http://localhost:9191/public/api/coupan').subscribe((res: any)=> {\n      console.log(\"res\");\n      console.log(res);\n     if(res.success){\n        console.log(res.data);\n        \n        this.coupansres = res.data;\n       \n       console.log(this.coupansres);\n    \n      \n      \n        }\n      else{\n         console.log(\"error\");\n      }\n      \n   },\n    err => {\n\n    });\n  }\n  openModal(modal) {\n    modal.open();\n  }\n\n  closeModal(modal) {\n    modal.close();\n  }\n  createCoupan(){\n        \n    var cc = require('coupon-code');    \n// generate a 4 part code\nthis.addccode = cc.generate({ parts : 4 });\nthis.coupanCode = this.addccode;\nconsole.log(\"generated code\");\nconsole.log(this.addccode);\n\n  }\n  addCoupan(modal) {\n \n\n      this.addCoupanArray = {\n      title: this.addctitle,\n      frequency: this.addcfrq,\n      discount: this.addcdiscount,\n      description: this.addcdes,\n      expiry: this.addcexpiry,\n      type: this.addctype,\n      coupan:this.addccode\n    }\n      // console.log(\"array data\");\n      // console.log(this.addCoupanArray);\n      // console.log(\"title\")\n      // console.log(this.addctitle);\n      // if(this.addctitle!==this.ctitle )\n      // {\n        this.http.post(this.auth.getDomainName() + '/api/coupan', this.addCoupanArray).subscribe((res: any) => {    \n    // this.http.post('http://localhost:9191/public/api/coupan', this.addCoupanArray).subscribe((res:any)=>{\n         if(res.success){\n          console.log('sucess');\n          alert(\"your coupan added successfully !\");\n         }\n          else\n            {\n              alert(res.error);\n             }\n          }, \n     err=> {\n            console.log(err);\n          });\n  \n   this.closeModal(modal);\n }\n  editCoupan(modal,selectedCoupan,pid) {\n    this.editCoupanArray = {\n      title: selectedCoupan.title,\n      frequency: selectedCoupan.frequency,\n      discount: selectedCoupan.discount,\n      description: selectedCoupan.description,\n      expiry: selectedCoupan.expiry,\n      type: selectedCoupan.type,\n      coupan: selectedCoupan.code,\n      coupanId:pid\n\n }\n console.log(this.editCoupanArray);\n      this.http.put(this.auth.getDomainName() + '/api/coupan', this.editCoupanArray).subscribe((data) => {\n   // this.http.put('http://localhost:9191/public/api/coupan', this.editCoupanArray).subscribe(data=>{\n      console.log(data);\n      console.log(selectedCoupan.type);\n      alert(\"your coupan modified successfully !\");\n    \n    }, \n    err=> {\n      console.log(err);\n    });\n    this.closeModal(modal);\n  }\n  deleteItem(pid, modal, index) {\n    console.log(pid);\n    this.http.delete(this.auth.getDomainName() + '/api/coupan/'+ pid, this.editCoupanArray).subscribe((data) => {\n    // this.http.delete('http://localhost:9191/public/api/coupan/'+ pid, this.editCoupanArray).subscribe(data=>{\n      console.log(data);\n      alert(\"your coupan removed successfully !\");\n    }, \n    err=> {\n      console.log(err);\n    });\n    this.closeModal(modal);\n  }\n\n  //getCoreDate(date = new Date(new Date().toUTCString())){\n    // return (new Date(new Date(new Date( new Date(date).setHours(0)).setMinutes(0)).setSeconds(0)))\n   // return new Date(date.toLocaleDateString());\n // }\n\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { routing } from './snacks.routing';\nimport { SharedModule } from '../../shared/shared.module';\nimport { SnacksComponent } from './snacks.component';\nimport { ModalModule } from 'ngx-modal';\n\n@NgModule({\n    imports: [\n        CommonModule,\n        FormsModule,\n        ReactiveFormsModule,\n        SharedModule,\n        routing,\n        ModalModule\n    ],\n    declarations: [\n        SnacksComponent\n    ]\n})\nexport class SnacksModule { }\n","import { Routes, RouterModule } from '@angular/router';\nimport { SnacksComponent } from './snacks.component';\n\nconst childRoutes: Routes = [\n    {\n        path: '',\n        component: SnacksComponent\n    }\n];\n\nexport const routing = RouterModule.forChild(childRoutes);\n"],"sourceRoot":""}
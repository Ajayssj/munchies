{"version":3,"sources":["webpack:///./src/app/admin/pages/company/company.component.css","webpack:///./src/app/admin/pages/company/company.component.html","webpack:///./src/app/admin/pages/company/company.component.ts","webpack:///./src/app/admin/pages/company/company.module.ts","webpack:///./src/app/admin/pages/company/company.routing.ts"],"names":[],"mappings":"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","file":"company-company-module.js","sourcesContent":["module.exports = \".company_wrapper {\\r\\n  padding-right: 40px;\\r\\n}\\r\\n.mr-20 {\\r\\n  margin-right: 20px;\\r\\n}\\r\\nselect.form-control {\\r\\n  border-radius: 0;\\r\\n  border: none;\\r\\n  border-bottom: 1px solid transparent;\\r\\n  background: rgba(0,0,0,.1);\\r\\n  transition: all 1s;\\r\\n  -o-transition: all 1s;\\r\\n  -moz-transition: all 1s;\\r\\n  -webkit-transition: all 1s;\\r\\n}\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvYWRtaW4vcGFnZXMvY29tcGFueS9jb21wYW55LmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7RUFDRSxvQkFBb0I7Q0FDckI7QUFDRDtFQUNFLG1CQUFtQjtDQUNwQjtBQUNEO0VBQ0UsaUJBQWlCO0VBQ2pCLGFBQWE7RUFDYixxQ0FBcUM7RUFDckMsMkJBQTJCO0VBQzNCLG1CQUFtQjtFQUNuQixzQkFBc0I7RUFDdEIsd0JBQXdCO0VBQ3hCLDJCQUEyQjtDQUM1QiIsImZpbGUiOiJzcmMvYXBwL2FkbWluL3BhZ2VzL2NvbXBhbnkvY29tcGFueS5jb21wb25lbnQuY3NzIiwic291cmNlc0NvbnRlbnQiOlsiLmNvbXBhbnlfd3JhcHBlciB7XHJcbiAgcGFkZGluZy1yaWdodDogNDBweDtcclxufVxyXG4ubXItMjAge1xyXG4gIG1hcmdpbi1yaWdodDogMjBweDtcclxufVxyXG5zZWxlY3QuZm9ybS1jb250cm9sIHtcclxuICBib3JkZXItcmFkaXVzOiAwO1xyXG4gIGJvcmRlcjogbm9uZTtcclxuICBib3JkZXItYm90dG9tOiAxcHggc29saWQgdHJhbnNwYXJlbnQ7XHJcbiAgYmFja2dyb3VuZDogcmdiYSgwLDAsMCwuMSk7XHJcbiAgdHJhbnNpdGlvbjogYWxsIDFzO1xyXG4gIC1vLXRyYW5zaXRpb246IGFsbCAxcztcclxuICAtbW96LXRyYW5zaXRpb246IGFsbCAxcztcclxuICAtd2Via2l0LXRyYW5zaXRpb246IGFsbCAxcztcclxufSJdfQ== */\"","module.exports = \"<div class=\\\"company_wrapper\\\">\\n  <div class=\\\"container-fluid\\\">\\n    <ul class=\\\"nav nav-tabs\\\">\\n      <li [ngClass]=\\\"{'active': view == 'company'}\\\" (click)=\\\"changeView('company')\\\"><a>Company</a></li>\\n      <li [ngClass]=\\\"{'active': view == 'types'}\\\" (click)=\\\"changeView('types')\\\"><a>Types</a></li>\\n      <li [ngClass]=\\\"{'active': view == 'product'}\\\" (click)=\\\"changeView('product')\\\"><a>Product</a></li>\\n    </ul>\\n  </div>\\n  <modal #addModal [closeOnEscape]=\\\"false\\\" [closeOnOutsideClick]=\\\"false\\\">\\n    <modal-header>\\n      <h3>modal that cannot be simply closed</h3>\\n    </modal-header>\\n    <modal-content>\\n      <form *ngIf=\\\"view=='company'\\\" [formGroup]=\\\"addProductCompanyForm\\\" (ngSubmit)=\\\"onSubmit(addModal, 'company')\\\">\\n        <div class=\\\"form-group\\\">\\n          <label class=\\\"control-label\\\">Company</label>\\n          <input type=\\\"text\\\" class=\\\"form-control\\\" formControlName=\\\"productCompany\\\" placeholder=\\\"Enter Product Company\\\" />\\n        </div>\\n        <button class=\\\"btn btn-primary\\\">Add Company</button>\\n      </form>\\n      <form *ngIf=\\\"view=='types'\\\" [formGroup]=\\\"addProductTypeForm\\\" (ngSubmit)=\\\"onSubmit(addModal, 'type')\\\">\\n        <div class=\\\"form-group\\\">\\n          <label class=\\\"control-label\\\">Select Company</label>\\n          <!-- <ng-select [items]=\\\"companyName\\\" [disabled]=\\\"disabled\\\" (data)=\\\"refreshValue($event)\\\" (selected)=\\\"selected($event)\\\"\\n            (removed)=\\\"removed($event)\\\" (typed)=\\\"typed($event)\\\" placeholder=\\\"No city selected\\\">\\n          </ng-select> -->\\n          <select formControlName=\\\"selectedCompany\\\" class=\\\"form-control\\\">\\n            <option *ngFor=\\\"let company of productCompanies\\\" value=\\\"{{company._id}}\\\">{{company.company}}</option>\\n          </select>\\n        </div>\\n        <div class=\\\"form-group\\\">\\n          <label class=\\\"control-label\\\">Type</label>\\n          <input type=\\\"text\\\" class=\\\"form-control\\\" formControlName=\\\"pType\\\" placeholder=\\\"Enter Product Type\\\" />\\n        </div>\\n        <button class=\\\"btn btn-primary\\\">Add Product Type</button>\\n      </form>\\n      </modal-content>\\n    <!-- <modal-footer>\\n    </modal-footer> -->\\n  </modal>\\n  \\n  <modal #editModal [closeOnEscape]=\\\"false\\\" [closeOnOutsideClick]=\\\"false\\\">\\n      <modal-header>\\n        <h3>modal that cannot be simply closed</h3>\\n      </modal-header>\\n      <modal-content>\\n        <form *ngIf=\\\"view=='company'\\\" [formGroup]=\\\"editProductCompanyForm\\\" (ngSubmit)=\\\"editOnSubmit(editModal, 'company', selectedCompanyObj._id)\\\">\\n          <div class=\\\"form-group\\\">\\n            <label class=\\\"control-label\\\">Company</label>\\n            <input type=\\\"text\\\" class=\\\"form-control\\\" formControlName=\\\"productCompany\\\" value=\\\"{{selectedCompanyObj.company}}\\\" />\\n          </div>\\n          <button class=\\\"btn btn-primary\\\">Edit Company</button>\\n        </form>\\n        <form *ngIf=\\\"view=='types'\\\" [formGroup]=\\\"editProductTypeForm\\\" (ngSubmit)=\\\"editOnSubmit(editModal, 'type', selectedTypeObj._id)\\\">\\n          <div class=\\\"form-group\\\">\\n            <label class=\\\"control-label\\\">Select Company</label>\\n            <!-- <ng-select [items]=\\\"companyName\\\" [disabled]=\\\"disabled\\\" (data)=\\\"refreshValue($event)\\\" (selected)=\\\"selected($event)\\\"\\n              (removed)=\\\"removed($event)\\\" (typed)=\\\"typed($event)\\\" placeholder=\\\"No city selected\\\">\\n            </ng-select> -->\\n            <select formControlName=\\\"selectedCompany\\\" class=\\\"form-control\\\">\\n              <option *ngFor=\\\"let companyItem of productCompanies\\\" value=\\\"{{companyItem._id}}\\\">{{companyItem.company}}</option>\\n            </select>\\n          </div>\\n          <div class=\\\"form-group\\\">\\n            <label class=\\\"control-label\\\">Type</label>\\n            <input type=\\\"text\\\" class=\\\"form-control\\\" formControlName=\\\"pType\\\" value=\\\"{{selectedTypeObj.type}}\\\" />\\n          </div>\\n          <button class=\\\"btn btn-primary\\\">Edit Product Type</button>\\n        </form>\\n        </modal-content>\\n      <!-- <modal-footer>\\n      </modal-footer> -->\\n    </modal>\\n  <div class=\\\"container-fluid content\\\">\\n    <div *ngIf=\\\"view == 'company'\\\">\\n      <div class=\\\"row\\\">\\n        <button class=\\\"btn btn-primary\\\" (click)=\\\"addModal.open()\\\" style=\\\"margin:20px\\\">Add Company</button>\\n      </div>\\n      <table class=\\\"table table-bordered\\\">\\n        <thead>\\n          <tr>\\n            <th>No</th>\\n            <th>Company Name</th>\\n            <th>Edit/Delete</th>\\n          </tr>\\n        </thead>\\n        <tbody>\\n          <tr *ngFor=\\\"let pCompany of productCompanies, let i=index\\\">\\n            <td>{{i+1}}</td>\\n            <td>{{pCompany.company}}</td>\\n            <td>\\n              <button (click)=\\\"editModal.open();selectedCompanyObj=pCompany\\\" class=\\\"btn btn-success mr-20\\\">Edit</button>\\n              <button class=\\\"btn btn-danger\\\">Delete</button></td>\\n          </tr>\\n        </tbody>\\n      </table>\\n    </div>\\n\\n    <div *ngIf=\\\"view == 'types'\\\">\\n      <div class=\\\"row\\\">\\n        <button class=\\\"btn btn-primary\\\" (click)=\\\"addModal.open()\\\" style=\\\"margin:20px\\\">Add Product Type</button>\\n      </div>\\n      <table class=\\\"table table-bordered\\\">\\n        <thead>\\n          <tr>\\n            <th>No</th>\\n            <th>Product Company</th>\\n            <th>Product Type</th>\\n            <th>Edit/Delete</th>\\n          </tr>\\n        </thead>\\n        <tbody>\\n          <tr *ngFor=\\\"let pType of productTypes, let i=index\\\">\\n            <td>{{i+1}}</td>\\n            <td>{{(pType.companies && pType.companies.length > 0) ? (pType.companies[0] && pType.companies[0].company ? pType.companies[0] && pType.companies[0].company : \\\"\\\") : ''}}</td>\\n            <td>{{pType.type}}</td>\\n            <td>\\n              <button (click)=\\\"editModal.open();selectedTypeObj=pType\\\" class=\\\"btn btn-success mr-20\\\">Edit</button>\\n              <button class=\\\"btn btn-danger\\\">Delete</button>\\n            </td>\\n          </tr>\\n          <!-- <tr>\\n            <td>2</td>\\n            <td>Makhana</td>\\n            <td><button class=\\\"btn btn-danger\\\">Delete</button></td>\\n          </tr>\\n          <tr>\\n            <td>3</td>\\n            <td>Enery Bars</td>\\n            <td><button class=\\\"btn btn-danger\\\">Delete</button></td>\\n          </tr> -->\\n        </tbody>\\n      </table>\\n    </div>\\n\\n    <div *ngIf=\\\"view == 'product'\\\">\\n      <div class=\\\"row\\\">\\n        <button class=\\\"btn btn-primary\\\" style=\\\"margin:20px\\\">Add Product Type</button>\\n      </div>\\n      <table class=\\\"table table-bordered\\\">\\n        <thead>\\n          <tr>\\n            <th>No</th>\\n            <th>Product Name</th>\\n            <th>Type</th>\\n            <th>Company</th>\\n            <th>Quantity</th>\\n            <th>MRP</th>\\n            <th>KCAL</th>\\n            <th>Edit/Delete</th>\\n          </tr>\\n        </thead>\\n        <tbody>\\n          <tr *ngFor=\\\"let product of products, let i=index\\\">\\n            <td>{{i+1}}</td>\\n            <td>{{product.name}}</td>\\n            <td>Makhana</td>\\n            <td>{{product.company}}</td>\\n            <td>{{product.quantity}}</td>\\n            <td>{{product.price}}</td>\\n            <td>{{product.kcal}}</td>\\n            <td><button class=\\\"btn btn-success mr-20\\\">Edit</button><button (click)=\\\"deleteProduct(product._id)\\\" class=\\\"btn btn-danger\\\">Delete</button></td>\\n          </tr>\\n          <!-- <tr>\\n            <td>2</td>\\n            <td>The Brain</td>\\n            <td>Laadu</td>\\n            <td>Charlie</td>\\n            <td>35gm</td>\\n            <td>70</td>\\n            <td>81</td>\\n            <td>3</td>\\n            <td>34</td>\\n            <td><button class=\\\"btn btn-danger\\\">Edit</button></td>\\n            <td><button class=\\\"btn btn-danger\\\">Delete</button></td>\\n          </tr>\\n          <tr>\\n            <td>3</td>\\n            <td>Tough Nut Bar</td>\\n            <td>Energy Bar</td>\\n            <td>Eighty20</td>\\n            <td>35gm</td>\\n            <td>70</td>\\n            <td>81</td>\\n            <td>3</td>\\n            <td>34</td>\\n            <td><button class=\\\"btn btn-danger\\\">Edit</button></td>\\n            <td><button class=\\\"btn btn-danger\\\">Delete</button></td>\\n          </tr> -->\\n        </tbody>\\n      </table>\\n    </div>\\n  </div>\\n</div>\"","import { Component, OnInit } from '@angular/core';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { AuthService } from '../../../user/auth.service';\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\nimport swal from 'sweetalert2';\ninterface productRes {\n  success: boolean,\n  data: object,\n  message: string\n}\n@Component({\n  selector: 'app-company',\n  templateUrl: './company.component.html',\n  styleUrls: ['./company.component.css']\n})\nexport class CompanyComponent implements OnInit {\n  view: String = 'company';\n  products;\n  deleteMessage = '';\n  data = {};\n  modalEl;\n  pType = []; \n  productTypes;\n  pCompany;\n  productCompanies;\n  productCompany = \"\";\n  companyName = [];\n  companyId: any;\n  selectedCompany = \"No Selected Company\";\n  selectedCompanyName = \"\";\n  addProductTypeForm: FormGroup;\n  addProductCompanyForm: FormGroup;\n  editProductCompanyForm: FormGroup;\n  editProductTypeForm: FormGroup;\n  selectedCompanyObj= {};\n  selectedTypeObj= {};\n  constructor(private formBuilder: FormBuilder, private http: HttpClient, private auth: AuthService) { }\n  \n  ngOnInit() {\n    console.log(\"hiiiiiiiiiiiii\", this.auth.getDomainName());\n    this.http.get(this.auth.getDomainName() + '/api/product').subscribe((res: productRes) => {\n      console.log(res.data);\n      this.products = res.data;\n    },\n    err=> {\n      console.log(err);\n    });\n    \n    this.http.get(this.auth.getDomainName() + '/api/type').subscribe((res: productRes) => {\n      console.log(res.data);\n      // companies[{ _id , company}]\n      this.productTypes = res.data;\n    },\n    err=> {\n      console.log(err);\n    });\n    this.http.get(this.auth.getDomainName() + '/api/company').subscribe((res: any) => {\n      console.log(res);\n      this.productCompanies = res.data;\n      console.log(this.productCompanies);\n      // this.productCompanies.forEach(element => {\n      //   console.log(element);\n      //   this.companyId.push(element._id);\n      //   this.companyName.push(element.company);\n      // });\n    },\n    err=> {\n      console.log(err);\n    });\n    this.addProductTypeForm = this.formBuilder.group({\n      pType: ['', Validators.required],\n      selectedCompany: ['', Validators.required]\n    });\n    this.addProductCompanyForm = this.formBuilder.group({\n      productCompany: ['', Validators.required]\n    });\n    this.editProductCompanyForm = this.formBuilder.group({\n      productCompany: ['', Validators.required]\n    });\n    this.editProductTypeForm = this.formBuilder.group({\n      pType: ['', Validators.required],\n      selectedCompany: ['', Validators.required]\n    });\n  }\n  editProduct(pid, mid) {\n    console.log(\"edit product\", pid);\n  }\n  deleteProduct(pid) {\n    this.data = {\n      productId: pid\n    }\n    console.log(this.data);\n    this.http.delete(this.auth.getDomainName() + '/api/product/delete/', this.data).subscribe((res: productRes)=> {\n      console.log(res.success);\n        this.deleteMessage = res.message; \n    },\n    err=> {\n      console.log(err);\n    })\n  }\n  openModal(modal) {\n    modal.open();\n  }\n\n  closeModal(modal) {\n    modal.close();\n  }\n\n  onClose() {\n    swal({\n      type: 'success',\n      title: 'Success!',\n      text: 'close it!',\n    });\n  }\n  openCompanyEditModal() {\n    console.log();\n  }\n\n  changeView(view) {\n    this.view = view;\n  }\n  onSubmit(modal, view) {\n    this.companyId = this.addProductTypeForm.get(\"selectedCompany\").value;\n    console.log(\"hiiiiiiiiiii\", this.companyId);\n    if(view == \"type\") {\n    this.pType = this.addProductTypeForm.get('pType').value;\n    this.http.post(this.auth.getDomainName() + '/api/type/add', {type: this.pType, companyId: this.companyId}).subscribe((data:any)=>{\n      console.log(data);\n      // if(data && data.success) { this.productTypes.push(data) }\n    }, \n    err=> {\n      console.log(err);\n    });\n  }\n  else if(view == \"company\") {\n    this.productCompany = this.addProductCompanyForm.get('productCompany').value;\n    this.http.post(this.auth.getDomainName() + '/api/company/add', {company: this.productCompany}).subscribe(data=>{\n      console.log(data);\n    }, \n    err=> {\n      console.log(err);\n    });\n  }\n    this.closeModal(modal);\n  }\n  editOnSubmit(modal, view, id) {\n    this.companyId = this.editProductTypeForm.get(\"selectedCompany\").value;\n    console.log(\"hiiiiiiiiiii\", this.companyId);\n    if(view == \"type\") {\n    this.pType = this.editProductTypeForm.get('pType').value;\n    this.http.put(this.auth.getDomainName() + '/api/type/edit', {type: this.pType, typeId: id, companyId: this.companyId}).subscribe((data:any)=>{\n      console.log(data);\n      // if(data && data.success) { this.productTypes.push(data) }\n    }, \n    err=> {\n      console.log(err);\n    });\n  }\n  else if(view == \"company\") {\n    this.productCompany = this.editProductCompanyForm.get('productCompany').value;\n    this.http.put(this.auth.getDomainName() + '/api/company/edit', {company: this.productCompany, companyId: id}).subscribe(data=>{\n      console.log(data);\n    }, \n    err=> {\n      console.log(err);\n    });\n  }\n    this.closeModal(modal);\n  }\n\n  public value: any = {};\n  public _disabledV: string = '0';\n  public disabled: boolean = false;\n  \n  public selectedCompanyDetails(value: any): void {\n    console.log('Selected value is: ', value);\n  }\n\n  public removed(value: any): void {\n    console.log('Removed value is: ', value);\n  }\n\n  public typed(value: any): void {\n    console.log('New search input: ', value);\n  }\n\n  public refreshValue(value: any): void {\n    this.value = value;\n  }\n\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { routing } from './company.routing';\nimport { SharedModule } from '../../shared/shared.module';\nimport { CompanyComponent } from './company.component';\nimport { ModalModule } from 'ngx-modal';\nimport { SelectModule } from 'ng2-select';\nimport { ModalsComponent } from '../ui/components/modals/modals.component';\nimport { FormComponent } from '../form/form.component';\nimport { FormInputsComponent } from '../form/components/form-inputs/form-inputs.component';\nimport { Ng2SelectComponent } from '../form/components/ng2-select/ng2-select.component';\nimport { SingleSelectComponent } from '../form/components/ng2-select/single-select/single-select.component';\n\n@NgModule({\n    imports: [\n        CommonModule,\n        FormsModule,\n        ReactiveFormsModule,\n        SharedModule,\n        routing,\n        ModalModule,\n        SelectModule\n    ],\n    declarations: [\n        CompanyComponent,\n        ModalsComponent,\n        FormComponent,\n        FormInputsComponent,\n        SingleSelectComponent,\n        Ng2SelectComponent\n    ]\n})\nexport class CompanyModule { }\n","import { Routes, RouterModule } from '@angular/router';\nimport { CompanyComponent } from './company.component';\n\nconst childRoutes: Routes = [\n    {\n        path: '',\n        component: CompanyComponent\n    }\n];\n\nexport const routing = RouterModule.forChild(childRoutes);\n"],"sourceRoot":""}